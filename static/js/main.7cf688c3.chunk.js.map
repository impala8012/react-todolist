{"version":3,"sources":["hooks/useToggleState.js","hooks/useInputState.js","components/EditTodoForm.js","components/Todo.js","components/TodoList.js","components/TodoForm.js","hooks/useTodoState.js","components/FilterTodo.js","components/TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["useToggle","initialVal","useState","state","setState","toggle","useInputState","value","setValue","e","target","Form","styled","form","EditTodoForm","id","editTodo","task","toggleEditForm","handleChange","reset","onSubmit","preventDefault","onChange","TodoItem","div","TodoContent","TodoButtonContainer","Todo","completed","removeTodo","toggleTodo","useToggleState","isEditing","toggleisEditing","onClick","style","textDecoration","TodoList","todos","filter","todo","map","TodoForm","addTodo","placeholder","useTodoState","initailTodos","setTodos","setFilter","useRef","newTodoText","current","todoId","updatedTodo","newTask","showAllTodo","showCompletedTodo","showIncompletedTodo","clearAll","Filter","FilterTodo","Container","TodoApp","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cf688c3.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nfunction useToggle(initialVal = false) {\r\n  const [state, setState] = useState(initialVal);\r\n  const toggle = () => {\r\n    setState(!state);\r\n  };\r\n  // ÂõûÂÇ≥ state ÈÇÑÊúâ toggle function\r\n  return [state, toggle];\r\n}\r\n\r\nexport default useToggle;\r\n","import { useState } from \"react\";\r\n\r\nconst useInputState = (initialVal) => {\r\n  const [value, setValue] = useState(initialVal);\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  const reset = () => {\r\n    setValue(\"\");\r\n  };\r\n  return [value, handleChange, reset];\r\n};\r\n\r\nexport default useInputState;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useInputState from \"../hooks/useInputState\";\r\n\r\nconst Form = styled.form`\r\n  text-align: center;\r\n\r\n  input {\r\n    outline: none;\r\n    width: 350px;\r\n    height: 25px;\r\n    margin: 0 5px;\r\n    border-radius: 5px;\r\n  }\r\n  button {\r\n    color: red;\r\n    border-radius: 10px;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nfunction EditTodoForm({ id, editTodo, task, toggleEditForm }) {\r\n  const [value, handleChange, reset] = useInputState(task);\r\n  return (\r\n    <div>\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          editTodo(id, value);\r\n          reset();\r\n          toggleEditForm();\r\n        }}\r\n      >\r\n        <input onChange={handleChange} value={value}></input>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditTodoForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useToggleState from \"../hooks/useToggleState\";\r\nimport EditTodoForm from \"./EditTodoForm\";\r\n\r\nconst TodoItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst TodoContent = styled.div`\r\n  width: 50%;\r\n  margin-top: 5px;\r\n\r\n  li {\r\n    display: block;\r\n    list-style: none;\r\n    font-size: 24px;\r\n    \r\n\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TodoButtonContainer = styled.div`\r\n  button {\r\n    font-size: 18px;\r\n    outline: none;\r\n    color: red;\r\n    border-radius: 5px;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nfunction Todo({ task, completed, id, removeTodo, toggleTodo, editTodo }) {\r\n  // console.log(\"completed\", completed)\r\n  const [isEditing, toggleisEditing] = useToggleState(false);\r\n  return (\r\n    <TodoItem>\r\n      {isEditing ? (\r\n        <EditTodoForm\r\n          editTodo={editTodo}\r\n          id={id}\r\n          task={task}\r\n          toggleEditForm={toggleisEditing}\r\n        />\r\n      ) : (\r\n        <>\r\n          <TodoContent onClick={() => toggleTodo(id)}>\r\n            <li style={{ textDecoration: completed ? \"line-through\" : \"none\" }}>\r\n              {task}\r\n            </li>\r\n          </TodoContent>\r\n          <TodoButtonContainer>\r\n            <button onClick={toggleisEditing}>Edit üìù</button>\r\n            <button onClick={() => removeTodo(id)}>Delete üóëÔ∏è</button>\r\n          </TodoButtonContainer>\r\n        </>\r\n      )}\r\n    </TodoItem>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList({ todos, removeTodo, toggleTodo, editTodo, filter }) {\r\n  return (\r\n    <div>\r\n      {todos\r\n        .filter((todo) => {\r\n          if (filter === \"all\") return todo;\r\n          return filter === \"completed\" ? todo.completed : !todo.completed;\r\n        })\r\n        .map((todo) => (\r\n          <Todo\r\n            id={todo.id}\r\n            filter={filter}\r\n            task={todo.task}\r\n            key={todo.id}\r\n            completed={todo.completed}\r\n            removeTodo={removeTodo}\r\n            toggleTodo={toggleTodo}\r\n            editTodo={editTodo}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useInputState from \"../hooks/useInputState\";\r\n\r\nconst Form = styled.form`\r\n  text-align: center;\r\n\r\n  input {\r\n    outline: none;\r\n    width: 500px;\r\n    height: 25px;\r\n    margin: 0 5px;\r\n    border-radius: 5px;\r\n  }\r\n  button {\r\n    color: red;\r\n    border-radius: 10px;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nfunction TodoForm({ addTodo }) {\r\n  const [value, handleChange, reset] = useInputState(\"\");\r\n  return (\r\n    <div>\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addTodo(value);\r\n          reset();\r\n        }}\r\n      >\r\n        <input\r\n          value={value}\r\n          onChange={handleChange}\r\n          placeholder=\"add new todo\"\r\n        ></input>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import { useState, useRef } from \"react\";\r\n\r\nconst useTodoState = (initailTodos) => {\r\n  const [todos, setTodos] = useState(initailTodos);\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const id = useRef(1);\r\n  const addTodo = (newTodoText) => {\r\n    if (newTodoText === \"\") return;\r\n    // console.log(id);\r\n    // Êõ¥Êñ∞\r\n    setTodos([\r\n      ...todos,\r\n      { id: id.current++, task: newTodoText, completed: false },\r\n    ]);\r\n  };\r\n\r\n  // Âà™Èô§\r\n  const removeTodo = (todoId) => {\r\n    // ÊääË¶ÅÁßªÈô§ÁöÑtodo filter out\r\n    const updatedTodo = todos.filter((todo) => todo.id !== todoId);\r\n    setTodos(updatedTodo);\r\n  };\r\n\r\n  const toggleTodo = (todoId) => {\r\n    const updatedTodo = todos.map((todo) =>\r\n      todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\r\n    );\r\n    setTodos(updatedTodo);\r\n  };\r\n\r\n  const editTodo = (todoId, newTask) => {\r\n    const updatedTodo = todos.map((todo) =>\r\n      todo.id === todoId ? { ...todo, task: newTask } : todo\r\n    );\r\n    setTodos(updatedTodo);\r\n  };\r\n\r\n  const showAllTodo = () => setFilter(\"all\");\r\n  const showCompletedTodo = () => setFilter(\"completed\");\r\n  const showIncompletedTodo = () => setFilter(\"incompleted\");\r\n  const clearAll = () => setTodos([]);\r\n\r\n  return {\r\n    todos,\r\n    addTodo,\r\n    removeTodo,\r\n    toggleTodo,\r\n    editTodo,\r\n    filter,\r\n    showAllTodo,\r\n    showCompletedTodo,\r\n    showIncompletedTodo,\r\n    clearAll,\r\n  };\r\n};\r\n\r\nexport default useTodoState;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Filter = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  button {\r\n    margin: 0 10px 10px 10px;\r\n    border-radius: 5px;\r\n    font-size: 18px;\r\n    outline: none;\r\n  }\r\n`;\r\nfunction FilterTodo({\r\n  showAllTodo,\r\n  showCompletedTodo,\r\n  showIncompletedTodo,\r\n  clearAll,\r\n}) {\r\n  return (\r\n    <div>\r\n      <Filter>\r\n        <button onClick={showAllTodo}>ALL</button>\r\n        <button onClick={showCompletedTodo}>COMPLETED</button>\r\n        <button onClick={showIncompletedTodo}>INCOMPLETED</button>\r\n        <button onClick={clearAll}>DELETE ALL</button>\r\n      </Filter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterTodo;\r\n","import React, { useEffect } from \"react\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport useTodoState from \"../hooks/useTodoState\";\r\nimport styled from \"styled-components\";\r\nimport FilterTodo from \"./FilterTodo\";\r\n\r\nconst Container = styled.div`\r\n  margin: 20px auto;\r\n  width: 600px;\r\n  padding: 5px 10px 35px;\r\n  background: #d7e684;\r\n  color: white;\r\n  border-radius: 10px;\r\n\r\n  h1 {\r\n    font-size: 32px;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.3);\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nfunction TodoApp() {\r\n  const initailTodos = JSON.parse(window.localStorage.getItem(\"todos\") || \"[]\");\r\n  const {\r\n    todos,\r\n    addTodo,\r\n    removeTodo,\r\n    toggleTodo,\r\n    editTodo,\r\n    filter,\r\n    showAllTodo,\r\n    showCompletedTodo,\r\n    showIncompletedTodo,\r\n    clearAll,\r\n  } = useTodoState(initailTodos);\r\n  // Áï∂todo ÊúâËÆäÂãïÁöÑÊôÇÂÄôÈáçÊñ∞ÂëºÂè´ useEffect\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <h1>Todo List</h1>\r\n        <FilterTodo\r\n          filter={filter}\r\n          showAllTodo={showAllTodo}\r\n          showCompletedTodo={showCompletedTodo}\r\n          showIncompletedTodo={showIncompletedTodo}\r\n          clearAll={clearAll}\r\n        />\r\n        <TodoForm addTodo={addTodo}></TodoForm>\r\n        <TodoList\r\n          filter={filter}\r\n          todos={todos}\r\n          removeTodo={removeTodo}\r\n          toggleTodo={toggleTodo}\r\n          editTodo={editTodo}\r\n        ></TodoList>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n","import React from \"react\";\nimport TodoApp from \"./components/TodoApp\";\n\nfunction App() {\n  return <TodoApp />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}